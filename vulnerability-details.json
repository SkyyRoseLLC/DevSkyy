{
    "dependencies": [
        {
            "name": "aiobotocore",
            "version": "2.7.0",
            "vulns": []
        },
        {
            "name": "aiofiles",
            "version": "24.1.0",
            "vulns": []
        },
        {
            "name": "aiohappyeyeballs",
            "version": "2.6.1",
            "vulns": []
        },
        {
            "name": "aiohttp",
            "version": "3.13.0",
            "vulns": []
        },
        {
            "name": "aioitertools",
            "version": "0.7.1",
            "vulns": []
        },
        {
            "name": "aioredis",
            "version": "2.0.1",
            "vulns": []
        },
        {
            "name": "aiosignal",
            "version": "1.4.0",
            "vulns": []
        },
        {
            "name": "aiosqlite",
            "version": "0.20.0",
            "vulns": []
        },
        {
            "name": "alabaster",
            "version": "0.7.12",
            "vulns": []
        },
        {
            "name": "altair",
            "version": "5.0.1",
            "vulns": []
        },
        {
            "name": "amqp",
            "version": "5.3.1",
            "vulns": []
        },
        {
            "name": "anaconda-anon-usage",
            "skip_reason": "Dependency not found on PyPI and could not be audited: anaconda-anon-usage (0.4.3)"
        },
        {
            "name": "anaconda-catalogs",
            "version": "0.2.0",
            "vulns": []
        },
        {
            "name": "anaconda-client",
            "skip_reason": "Dependency not found on PyPI and could not be audited: anaconda-client (1.12.3)"
        },
        {
            "name": "anaconda-cloud-auth",
            "version": "0.1.4",
            "vulns": []
        },
        {
            "name": "anaconda-navigator",
            "skip_reason": "Dependency not found on PyPI and could not be audited: anaconda-navigator (2.5.4)"
        },
        {
            "name": "anaconda-project",
            "skip_reason": "Dependency not found on PyPI and could not be audited: anaconda-project (0.11.1)"
        },
        {
            "name": "annotated-types",
            "version": "0.7.0",
            "vulns": []
        },
        {
            "name": "anthropic",
            "version": "0.69.0",
            "vulns": []
        },
        {
            "name": "anyio",
            "version": "4.2.0",
            "vulns": []
        },
        {
            "name": "appdirs",
            "version": "1.4.4",
            "vulns": []
        },
        {
            "name": "applaunchservices",
            "version": "0.3.0",
            "vulns": []
        },
        {
            "name": "appnope",
            "version": "0.1.2",
            "vulns": []
        },
        {
            "name": "appscript",
            "version": "1.1.2",
            "vulns": []
        },
        {
            "name": "archspec",
            "version": "0.2.3",
            "vulns": []
        },
        {
            "name": "argon2-cffi",
            "version": "21.3.0",
            "vulns": []
        },
        {
            "name": "argon2-cffi-bindings",
            "version": "21.2.0",
            "vulns": []
        },
        {
            "name": "arrow",
            "version": "1.2.3",
            "vulns": []
        },
        {
            "name": "astroid",
            "version": "2.14.2",
            "vulns": []
        },
        {
            "name": "astropy",
            "version": "5.3.4",
            "vulns": []
        },
        {
            "name": "asttokens",
            "version": "2.0.5",
            "vulns": []
        },
        {
            "name": "async-lru",
            "version": "2.0.4",
            "vulns": []
        },
        {
            "name": "async-timeout",
            "version": "5.0.1",
            "vulns": []
        },
        {
            "name": "atomicwrites",
            "version": "1.4.0",
            "vulns": []
        },
        {
            "name": "attrs",
            "version": "23.1.0",
            "vulns": []
        },
        {
            "name": "autoflake",
            "version": "2.3.1",
            "vulns": []
        },
        {
            "name": "automat",
            "version": "20.2.0",
            "vulns": []
        },
        {
            "name": "autopep8",
            "version": "2.0.4",
            "vulns": []
        },
        {
            "name": "babel",
            "version": "2.11.0",
            "vulns": []
        },
        {
            "name": "backports-functools-lru-cache",
            "version": "1.6.4",
            "vulns": []
        },
        {
            "name": "backports-tempfile",
            "version": "1.0",
            "vulns": []
        },
        {
            "name": "backports-weakref",
            "version": "1.0.post1",
            "vulns": []
        },
        {
            "name": "bcrypt",
            "version": "4.2.0",
            "vulns": []
        },
        {
            "name": "beautifulsoup4",
            "version": "4.12.3",
            "vulns": []
        },
        {
            "name": "billiard",
            "version": "4.2.2",
            "vulns": []
        },
        {
            "name": "binaryornot",
            "version": "0.4.4",
            "vulns": []
        },
        {
            "name": "black",
            "version": "24.10.0",
            "vulns": []
        },
        {
            "name": "bleach",
            "version": "4.1.0",
            "vulns": []
        },
        {
            "name": "blinker",
            "version": "1.6.2",
            "vulns": []
        },
        {
            "name": "bokeh",
            "version": "3.3.4",
            "vulns": []
        },
        {
            "name": "boltons",
            "version": "23.0.0",
            "vulns": []
        },
        {
            "name": "boolean-py",
            "version": "5.0",
            "vulns": []
        },
        {
            "name": "botocore",
            "version": "1.31.64",
            "vulns": []
        },
        {
            "name": "bottleneck",
            "version": "1.3.7",
            "vulns": []
        },
        {
            "name": "brotli",
            "version": "1.0.9",
            "vulns": []
        },
        {
            "name": "cachecontrol",
            "version": "0.14.3",
            "vulns": []
        },
        {
            "name": "cachetools",
            "version": "4.2.2",
            "vulns": []
        },
        {
            "name": "celery",
            "version": "5.4.0",
            "vulns": []
        },
        {
            "name": "certifi",
            "version": "2024.8.30",
            "vulns": []
        },
        {
            "name": "cffi",
            "version": "2.0.0",
            "vulns": []
        },
        {
            "name": "chardet",
            "version": "4.0.0",
            "vulns": []
        },
        {
            "name": "charset-normalizer",
            "version": "2.0.4",
            "vulns": []
        },
        {
            "name": "click",
            "version": "8.1.8",
            "vulns": []
        },
        {
            "name": "click-didyoumean",
            "version": "0.3.1",
            "vulns": []
        },
        {
            "name": "click-plugins",
            "version": "1.1.1.2",
            "vulns": []
        },
        {
            "name": "click-repl",
            "version": "0.3.0",
            "vulns": []
        },
        {
            "name": "cloudpickle",
            "version": "2.2.1",
            "vulns": []
        },
        {
            "name": "clyent",
            "skip_reason": "Dependency not found on PyPI and could not be audited: clyent (1.2.2)"
        },
        {
            "name": "colorama",
            "version": "0.4.6",
            "vulns": []
        },
        {
            "name": "colorcet",
            "version": "3.0.1",
            "vulns": []
        },
        {
            "name": "comm",
            "version": "0.1.2",
            "vulns": []
        },
        {
            "name": "conda",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda (24.3.0)"
        },
        {
            "name": "conda-build",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-build (24.1.2)"
        },
        {
            "name": "conda-content-trust",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-content-trust (0.2.0)"
        },
        {
            "name": "conda-index",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-index (0.4.0)"
        },
        {
            "name": "conda-libmamba-solver",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-libmamba-solver (24.1.0)"
        },
        {
            "name": "conda-pack",
            "version": "0.6.0",
            "vulns": []
        },
        {
            "name": "conda-package-handling",
            "version": "2.2.0",
            "vulns": []
        },
        {
            "name": "conda-package-streaming",
            "version": "0.9.0",
            "vulns": []
        },
        {
            "name": "conda-repo-cli",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-repo-cli (1.0.75)"
        },
        {
            "name": "conda-token",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-token (0.4.0)"
        },
        {
            "name": "conda-verify",
            "skip_reason": "Dependency not found on PyPI and could not be audited: conda-verify (3.4.2)"
        },
        {
            "name": "constantly",
            "version": "23.10.4",
            "vulns": []
        },
        {
            "name": "contourpy",
            "version": "1.2.0",
            "vulns": []
        },
        {
            "name": "cookiecutter",
            "version": "2.5.0",
            "vulns": []
        },
        {
            "name": "coverage",
            "version": "7.10.7",
            "vulns": []
        },
        {
            "name": "cryptography",
            "version": "46.0.2",
            "vulns": []
        },
        {
            "name": "cssselect",
            "version": "1.2.0",
            "vulns": []
        },
        {
            "name": "cycler",
            "version": "0.11.0",
            "vulns": []
        },
        {
            "name": "cyclonedx-python-lib",
            "version": "9.1.0",
            "vulns": []
        },
        {
            "name": "cytoolz",
            "version": "0.12.2",
            "vulns": []
        },
        {
            "name": "dask",
            "version": "2023.11.0",
            "vulns": []
        },
        {
            "name": "datashader",
            "version": "0.16.0",
            "vulns": []
        },
        {
            "name": "debugpy",
            "version": "1.6.7",
            "vulns": []
        },
        {
            "name": "decorator",
            "version": "5.1.1",
            "vulns": []
        },
        {
            "name": "defusedxml",
            "version": "0.7.1",
            "vulns": []
        },
        {
            "name": "diff-match-patch",
            "version": "20200713",
            "vulns": []
        },
        {
            "name": "dill",
            "version": "0.3.7",
            "vulns": []
        },
        {
            "name": "distributed",
            "version": "2023.11.0",
            "vulns": []
        },
        {
            "name": "distro",
            "version": "1.8.0",
            "vulns": []
        },
        {
            "name": "dnspython",
            "version": "2.7.0",
            "vulns": []
        },
        {
            "name": "docstring-parser",
            "version": "0.17.0",
            "vulns": []
        },
        {
            "name": "docstring-to-markdown",
            "version": "0.11",
            "vulns": []
        },
        {
            "name": "docutils",
            "version": "0.18.1",
            "vulns": []
        },
        {
            "name": "ecdsa",
            "version": "0.19.1",
            "vulns": [
                {
                    "id": "GHSA-wj6h-64fc-37mp",
                    "fix_versions": [],
                    "aliases": [
                        "CVE-2024-23342"
                    ],
                    "description": "python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix."
                }
            ]
        },
        {
            "name": "email-validator",
            "version": "2.2.0",
            "vulns": []
        },
        {
            "name": "entrypoints",
            "version": "0.4",
            "vulns": []
        },
        {
            "name": "et-xmlfile",
            "version": "1.1.0",
            "vulns": []
        },
        {
            "name": "executing",
            "version": "0.8.3",
            "vulns": []
        },
        {
            "name": "fastapi",
            "version": "0.119.0",
            "vulns": []
        },
        {
            "name": "fastjsonschema",
            "version": "2.16.2",
            "vulns": []
        },
        {
            "name": "filelock",
            "version": "3.13.1",
            "vulns": []
        },
        {
            "name": "flake8",
            "version": "7.1.1",
            "vulns": []
        },
        {
            "name": "flask",
            "version": "2.2.5",
            "vulns": []
        },
        {
            "name": "fonttools",
            "version": "4.25.0",
            "vulns": []
        },
        {
            "name": "frozenlist",
            "version": "1.4.0",
            "vulns": []
        },
        {
            "name": "fsspec",
            "version": "2023.10.0",
            "vulns": []
        },
        {
            "name": "future",
            "version": "0.18.3",
            "vulns": []
        },
        {
            "name": "gensim",
            "version": "4.3.0",
            "vulns": []
        },
        {
            "name": "gitdb",
            "version": "4.0.7",
            "vulns": []
        },
        {
            "name": "gitpython",
            "version": "3.1.37",
            "vulns": [
                {
                    "id": "PYSEC-2024-4",
                    "fix_versions": [
                        "3.1.41"
                    ],
                    "aliases": [
                        "CVE-2024-22190",
                        "GHSA-2mqj-m65w-jghx"
                    ],
                    "description": "GitPython is a python library used to interact with Git repositories. There is an incomplete fix for CVE-2023-40590. On Windows, GitPython uses an untrusted search path if it uses a shell to run `git`, as well as when it runs `bash.exe` to interpret hooks. If either of those features are used on Windows, a malicious `git.exe` or `bash.exe` may be run from an untrusted repository. This issue has been patched in version 3.1.41."
                }
            ]
        },
        {
            "name": "gmpy2",
            "version": "2.1.2",
            "vulns": []
        },
        {
            "name": "greenlet",
            "version": "3.0.1",
            "vulns": []
        },
        {
            "name": "h11",
            "version": "0.16.0",
            "vulns": []
        },
        {
            "name": "h5py",
            "version": "3.9.0",
            "vulns": []
        },
        {
            "name": "heapdict",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "holoviews",
            "version": "1.18.3",
            "vulns": []
        },
        {
            "name": "httpcore",
            "version": "1.0.9",
            "vulns": []
        },
        {
            "name": "httpx",
            "version": "0.28.1",
            "vulns": []
        },
        {
            "name": "hvplot",
            "version": "0.9.2",
            "vulns": []
        },
        {
            "name": "hyperlink",
            "version": "21.0.0",
            "vulns": []
        },
        {
            "name": "idna",
            "version": "3.4",
            "vulns": [
                {
                    "id": "PYSEC-2024-60",
                    "fix_versions": [
                        "3.7"
                    ],
                    "aliases": [
                        "CVE-2024-3651"
                    ],
                    "description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."
                }
            ]
        },
        {
            "name": "imagecodecs",
            "version": "2023.1.23",
            "vulns": [
                {
                    "id": "PYSEC-2023-174",
                    "fix_versions": [
                        "2023.9.18"
                    ],
                    "aliases": [],
                    "description": "imagecodecs versions before v2023.9.18 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). imagecodecs v2023.9.18 upgrades the bundled libwebp binary to v1.3.2."
                },
                {
                    "id": "GHSA-94vc-p8w7-5p49",
                    "fix_versions": [
                        "2023.9.18"
                    ],
                    "aliases": [],
                    "description": "imagecodecs versions before v2023.9.18 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). imagecodecs v2023.9.18 upgrades the bundled libwebp binary to v1.3.2."
                }
            ]
        },
        {
            "name": "imagehash",
            "version": "4.3.2",
            "vulns": []
        },
        {
            "name": "imageio",
            "version": "2.33.1",
            "vulns": []
        },
        {
            "name": "imageio-ffmpeg",
            "version": "0.6.0",
            "vulns": []
        },
        {
            "name": "imagesize",
            "version": "1.4.1",
            "vulns": []
        },
        {
            "name": "imbalanced-learn",
            "version": "0.11.0",
            "vulns": []
        },
        {
            "name": "importlib-metadata",
            "version": "7.0.1",
            "vulns": []
        },
        {
            "name": "incremental",
            "version": "22.10.0",
            "vulns": []
        },
        {
            "name": "inflection",
            "version": "0.5.1",
            "vulns": []
        },
        {
            "name": "iniconfig",
            "version": "1.1.1",
            "vulns": []
        },
        {
            "name": "intake",
            "version": "0.6.8",
            "vulns": []
        },
        {
            "name": "intervaltree",
            "version": "3.1.0",
            "vulns": []
        },
        {
            "name": "ipykernel",
            "version": "6.28.0",
            "vulns": []
        },
        {
            "name": "ipython",
            "version": "8.20.0",
            "vulns": []
        },
        {
            "name": "ipython-genutils",
            "version": "0.2.0",
            "vulns": []
        },
        {
            "name": "ipywidgets",
            "version": "7.6.5",
            "vulns": []
        },
        {
            "name": "isort",
            "version": "5.13.2",
            "vulns": []
        },
        {
            "name": "itemadapter",
            "version": "0.3.0",
            "vulns": []
        },
        {
            "name": "itemloaders",
            "version": "1.1.0",
            "vulns": []
        },
        {
            "name": "itsdangerous",
            "version": "2.0.1",
            "vulns": []
        },
        {
            "name": "jaraco-classes",
            "version": "3.2.1",
            "vulns": []
        },
        {
            "name": "jedi",
            "version": "0.18.1",
            "vulns": []
        },
        {
            "name": "jellyfish",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "jinja2",
            "version": "3.1.6",
            "vulns": []
        },
        {
            "name": "jiter",
            "version": "0.11.0",
            "vulns": []
        },
        {
            "name": "jmespath",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "joblib",
            "version": "1.2.0",
            "vulns": []
        },
        {
            "name": "json5",
            "version": "0.9.6",
            "vulns": []
        },
        {
            "name": "jsonpatch",
            "version": "1.32",
            "vulns": []
        },
        {
            "name": "jsonpointer",
            "version": "2.1",
            "vulns": []
        },
        {
            "name": "jsonschema",
            "version": "4.19.2",
            "vulns": []
        },
        {
            "name": "jsonschema-specifications",
            "version": "2023.7.1",
            "vulns": []
        },
        {
            "name": "jupyter-client",
            "version": "8.6.0",
            "vulns": []
        },
        {
            "name": "jupyter-console",
            "version": "6.6.3",
            "vulns": []
        },
        {
            "name": "jupyter-core",
            "version": "5.5.0",
            "vulns": [
                {
                    "id": "GHSA-33p9-3p43-82vq",
                    "fix_versions": [
                        "5.8.1"
                    ],
                    "aliases": [
                        "CVE-2025-30167"
                    ],
                    "description": "## Impact  On Windows, the shared `%PROGRAMDATA%` directory is searched for configuration files (`SYSTEM_CONFIG_PATH` and `SYSTEM_JUPYTER_PATH`), which may allow users to create configuration files affecting other users.  Only shared Windows systems with multiple users and unprotected `%PROGRAMDATA%` are affected.  ## Mitigations  - upgrade to `jupyter_core>=5.8.1` (5.8.0 is patched but breaks `jupyter-server`) , or - as administrator, modify the permissions on the `%PROGRAMDATA%` directory so it is not writable by unauthorized users, or - as administrator, create the `%PROGRAMDATA%\\jupyter` directory with appropriately restrictive permissions, or - as user or administrator, set the `%PROGRAMDATA%` environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators _or_ the current user)  ## Credit  Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932"
                }
            ]
        },
        {
            "name": "jupyter-events",
            "version": "0.8.0",
            "vulns": []
        },
        {
            "name": "jupyter-lsp",
            "version": "2.2.0",
            "vulns": [
                {
                    "id": "GHSA-4qhp-652w-c22x",
                    "fix_versions": [
                        "2.2.2"
                    ],
                    "aliases": [
                        "CVE-2024-22415"
                    ],
                    "description": "### Impact Installations of jupyter-lsp running in environments without configured file system access control (on the operating system level), and with jupyter-server instances exposed to non-trusted network are vulnerable to unauthorised access and modification of file system beyond the jupyter root directory.  ### Patches Version 2.2.2 has been patched.  ### Workarounds Users of jupyterlab who do not use jupyterlab-lsp can uninstall jupyter-lsp.  ### Credits We would like to credit Bary Levy, researcher of pillar.security research team, for the discovery and responsible disclosure of this vulnerability.  Edit: based on advice from pillar.security the Confidentiality/Integrity/Availability were increased to High to reflect potential for critical impact on publicly hosted jupyter-server instances lacking isolation of user privileges on operating system level (for best practices please consult https://jupyterhub.readthedocs.io/en/stable/explanation/websecurity.html#protect-users-from-each-other) and CWE-94 was added due to a potential vulnerability chaining in specific environments."
                }
            ]
        },
        {
            "name": "jupyter-server",
            "version": "2.10.0",
            "vulns": [
                {
                    "id": "PYSEC-2023-272",
                    "fix_versions": [
                        "2.11.2"
                    ],
                    "aliases": [
                        "GHSA-h56g-gq9v-vc8r",
                        "CVE-2023-49080"
                    ],
                    "description": "The Jupyter Server provides the backend (i.e. the core services, APIs, and REST endpoints) for Jupyter web applications like Jupyter notebook, JupyterLab, and Voila. Unhandled errors in API requests coming from an authenticated user include traceback information, which can include path information. There is no known mechanism by which to trigger these errors without authentication, so the paths revealed are not considered particularly sensitive, given that the requesting user has arbitrary execution permissions already in the same environment. A fix has been introduced in commit `0056c3aa52` which no longer includes traceback information in JSON error responses. For compatibility, the traceback field is present, but always empty. This commit has been included in version 2.11.2. Users are advised to upgrade. There are no known workarounds for this vulnerability."
                },
                {
                    "id": "PYSEC-2024-165",
                    "fix_versions": [
                        "2.14.1"
                    ],
                    "aliases": [
                        "CVE-2024-35178"
                    ],
                    "description": "The Jupyter Server provides the backend for Jupyter web applications. Jupyter Server on Windows has a vulnerability that lets unauthenticated attackers leak the NTLMv2 password hash of the Windows user running the Jupyter server. An attacker can crack this password to gain access to the Windows machine hosting the Jupyter server, or access other network-accessible machines or 3rd party services using that credential. Or an attacker perform an NTLM relay attack without cracking the credential to gain access to other network-accessible machines. This vulnerability is fixed in 2.14.1."
                }
            ]
        },
        {
            "name": "jupyter-server-terminals",
            "version": "0.4.4",
            "vulns": []
        },
        {
            "name": "jupyterlab",
            "version": "4.0.11",
            "vulns": [
                {
                    "id": "GHSA-vvfj-2jqx-52jm",
                    "fix_versions": [
                        "4.4.8"
                    ],
                    "aliases": [
                        "CVE-2025-59842"
                    ],
                    "description": "Links generated with LaTeX typesetters in Markdown files and Markdown cells in JupyterLab and Jupyter Notebook did not include the `noopener` attribute.  This is deemed to have no impact on the default installations. Theoretically users of third-party LaTeX-rendering extensions could find themselves vulnerable to reverse tabnabbing attacks if: - links generated by those extensions included `target=_blank` (no such extensions are known at time of writing) and - they were to click on a link generated in LaTeX (typically visibly different from other links).  For consistency with handling on other links, new versions of JupyterLab will enforce `noopener` and `target=_blank` on all links generated by typesetters. The former will harden the resilience of JupyterLab to extensions with lack of secure defaults in link rendering, and the latter will improve user experience by preventing accidental state loss when clicking on links rendered by LaTeX typesetters.  ### Impact  Since the official LaTeX typesetter extensions for JupyterLab: `jupyterlab-mathjax` (default), `jupyterlab-mathjax2` and `jupyterlab-katex` do not include the `target=_blank`, there is no impact for JupyterLab users.  ### Patches  JupyterLab 4.4.8  ### Workarounds  No workarounds are necessary.  ### References  None"
                }
            ]
        },
        {
            "name": "jupyterlab-pygments",
            "version": "0.1.2",
            "vulns": []
        },
        {
            "name": "jupyterlab-server",
            "version": "2.25.1",
            "vulns": []
        },
        {
            "name": "jupyterlab-widgets",
            "version": "3.0.9",
            "vulns": []
        },
        {
            "name": "keyring",
            "version": "23.13.1",
            "vulns": []
        },
        {
            "name": "kiwisolver",
            "version": "1.4.4",
            "vulns": []
        },
        {
            "name": "kombu",
            "version": "5.5.4",
            "vulns": []
        },
        {
            "name": "lazy-loader",
            "version": "0.3",
            "vulns": []
        },
        {
            "name": "lazy-object-proxy",
            "version": "1.6.0",
            "vulns": []
        },
        {
            "name": "lckr-jupyterlab-variableinspector",
            "version": "3.1.0",
            "vulns": []
        },
        {
            "name": "libarchive-c",
            "version": "2.9",
            "vulns": []
        },
        {
            "name": "libmambapy",
            "skip_reason": "Dependency not found on PyPI and could not be audited: libmambapy (1.5.6)"
        },
        {
            "name": "license-expression",
            "version": "30.4.4",
            "vulns": []
        },
        {
            "name": "linkify-it-py",
            "version": "2.0.0",
            "vulns": []
        },
        {
            "name": "llvmlite",
            "version": "0.42.0",
            "vulns": []
        },
        {
            "name": "lmdb",
            "version": "1.4.1",
            "vulns": []
        },
        {
            "name": "locket",
            "version": "1.0.0",
            "vulns": []
        },
        {
            "name": "lxml",
            "version": "4.9.3",
            "vulns": []
        },
        {
            "name": "lz4",
            "version": "4.3.2",
            "vulns": []
        },
        {
            "name": "markdown",
            "version": "3.4.1",
            "vulns": []
        },
        {
            "name": "markdown-it-py",
            "version": "2.2.0",
            "vulns": []
        },
        {
            "name": "markupsafe",
            "version": "2.1.3",
            "vulns": []
        },
        {
            "name": "matplotlib",
            "version": "3.8.0",
            "vulns": []
        },
        {
            "name": "matplotlib-inline",
            "version": "0.1.6",
            "vulns": []
        },
        {
            "name": "mccabe",
            "version": "0.7.0",
            "vulns": []
        },
        {
            "name": "mdit-py-plugins",
            "version": "0.3.0",
            "vulns": []
        },
        {
            "name": "mdurl",
            "version": "0.1.0",
            "vulns": []
        },
        {
            "name": "menuinst",
            "skip_reason": "Dependency not found on PyPI and could not be audited: menuinst (2.0.2)"
        },
        {
            "name": "mistune",
            "version": "2.0.4",
            "vulns": []
        },
        {
            "name": "more-itertools",
            "version": "10.1.0",
            "vulns": []
        },
        {
            "name": "motor",
            "version": "3.6.0",
            "vulns": []
        },
        {
            "name": "moviepy",
            "version": "2.2.1",
            "vulns": []
        },
        {
            "name": "mpmath",
            "version": "1.3.0",
            "vulns": []
        },
        {
            "name": "msgpack",
            "version": "1.0.3",
            "vulns": []
        },
        {
            "name": "multidict",
            "version": "6.0.4",
            "vulns": []
        },
        {
            "name": "multipledispatch",
            "version": "0.6.0",
            "vulns": []
        },
        {
            "name": "munkres",
            "version": "1.1.4",
            "vulns": []
        },
        {
            "name": "mypy",
            "version": "1.8.0",
            "vulns": []
        },
        {
            "name": "mypy-extensions",
            "version": "1.0.0",
            "vulns": []
        },
        {
            "name": "navigator-updater",
            "skip_reason": "Dependency not found on PyPI and could not be audited: navigator-updater (0.4.0)"
        },
        {
            "name": "nbclient",
            "version": "0.8.0",
            "vulns": []
        },
        {
            "name": "nbconvert",
            "version": "7.10.0",
            "vulns": []
        },
        {
            "name": "nbformat",
            "version": "5.9.2",
            "vulns": []
        },
        {
            "name": "nest-asyncio",
            "version": "1.6.0",
            "vulns": []
        },
        {
            "name": "networkx",
            "version": "3.1",
            "vulns": []
        },
        {
            "name": "nltk",
            "version": "3.8.1",
            "vulns": [
                {
                    "id": "PYSEC-2024-167",
                    "fix_versions": [
                        "3.9"
                    ],
                    "aliases": [
                        "CVE-2024-39705"
                    ],
                    "description": "NLTK through 3.8.1 allows remote code execution if untrusted packages have pickled Python code, and the integrated data package download functionality is used. This affects, for example, averaged_perceptron_tagger and punkt."
                }
            ]
        },
        {
            "name": "notebook",
            "version": "7.0.8",
            "vulns": []
        },
        {
            "name": "notebook-shim",
            "version": "0.2.3",
            "vulns": []
        },
        {
            "name": "numba",
            "version": "0.59.0",
            "vulns": []
        },
        {
            "name": "numexpr",
            "version": "2.8.7",
            "vulns": []
        },
        {
            "name": "numpy",
            "version": "1.26.4",
            "vulns": []
        },
        {
            "name": "numpydoc",
            "version": "1.5.0",
            "vulns": []
        },
        {
            "name": "openai",
            "version": "2.3.0",
            "vulns": []
        },
        {
            "name": "opencv-python",
            "version": "4.10.0.84",
            "vulns": []
        },
        {
            "name": "openpyxl",
            "version": "3.0.10",
            "vulns": []
        },
        {
            "name": "overrides",
            "version": "7.4.0",
            "vulns": []
        },
        {
            "name": "packageurl-python",
            "version": "0.17.5",
            "vulns": []
        },
        {
            "name": "packaging",
            "version": "23.1",
            "vulns": []
        },
        {
            "name": "pandas",
            "version": "2.1.4",
            "vulns": []
        },
        {
            "name": "pandocfilters",
            "version": "1.5.0",
            "vulns": []
        },
        {
            "name": "panel",
            "version": "1.3.8",
            "vulns": []
        },
        {
            "name": "param",
            "version": "2.0.2",
            "vulns": []
        },
        {
            "name": "paramiko",
            "version": "3.5.0",
            "vulns": []
        },
        {
            "name": "parsel",
            "version": "1.8.1",
            "vulns": []
        },
        {
            "name": "parso",
            "version": "0.8.3",
            "vulns": []
        },
        {
            "name": "partd",
            "version": "1.4.1",
            "vulns": []
        },
        {
            "name": "passlib",
            "version": "1.7.4",
            "vulns": []
        },
        {
            "name": "pathlib",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "pathspec",
            "version": "0.10.3",
            "vulns": []
        },
        {
            "name": "patsy",
            "version": "0.5.3",
            "vulns": []
        },
        {
            "name": "pexpect",
            "version": "4.8.0",
            "vulns": []
        },
        {
            "name": "pickleshare",
            "version": "0.7.5",
            "vulns": []
        },
        {
            "name": "pillow",
            "version": "10.4.0",
            "vulns": []
        },
        {
            "name": "pip",
            "version": "25.2",
            "vulns": [
                {
                    "id": "GHSA-4xh5-x5gv-qwph",
                    "fix_versions": [],
                    "aliases": [
                        "CVE-2025-8869"
                    ],
                    "description": "### Summary  In the fallback extraction path for source distributions, `pip` used Python\u2019s `tarfile` module without verifying that symbolic/hard link targets resolve inside the intended extraction directory. A malicious sdist can include links that escape the target directory and overwrite arbitrary files on the invoking host during `pip install`.  ### Impact  Successful exploitation enables arbitrary file overwrite outside the build/extraction directory on the machine running `pip`. This can be leveraged to tamper with configuration or startup files and may lead to further code execution depending on the environment, but the direct, guaranteed impact is integrity compromise on the vulnerable system.  ### Conditions  The issue is triggered when installing an attacker-controlled sdist (e.g., from an index or URL) and the fallback extraction code path is used. No special privileges are required beyond running `pip install`; active user action is necessary.  ### Remediation  The [fix](https://github.com/pypa/pip/pull/13550), while available as a patch that can be manually applied, has not yet been put into a numbered version but is planned for `25.3`. Using a Python interpreter that implements the safe-extraction behavior described by **PEP 706** provides additional defense in depth for other `tarfile` issues but is not a substitute for upgrading pip for this specific flaw."
                }
            ]
        },
        {
            "name": "pip-api",
            "version": "0.0.34",
            "vulns": []
        },
        {
            "name": "pip-audit",
            "version": "2.9.0",
            "vulns": []
        },
        {
            "name": "pip-requirements-parser",
            "version": "32.0.1",
            "vulns": []
        },
        {
            "name": "pkce",
            "version": "1.0.3",
            "vulns": []
        },
        {
            "name": "pkginfo",
            "version": "1.9.6",
            "vulns": []
        },
        {
            "name": "platformdirs",
            "version": "4.5.0",
            "vulns": []
        },
        {
            "name": "plotly",
            "version": "5.9.0",
            "vulns": []
        },
        {
            "name": "pluggy",
            "version": "1.6.0",
            "vulns": []
        },
        {
            "name": "ply",
            "version": "3.11",
            "vulns": []
        },
        {
            "name": "proglog",
            "version": "0.1.12",
            "vulns": []
        },
        {
            "name": "prometheus-client",
            "version": "0.14.1",
            "vulns": []
        },
        {
            "name": "prompt-toolkit",
            "version": "3.0.43",
            "vulns": []
        },
        {
            "name": "propcache",
            "version": "0.4.1",
            "vulns": []
        },
        {
            "name": "protego",
            "version": "0.1.16",
            "vulns": []
        },
        {
            "name": "protobuf",
            "version": "3.20.3",
            "vulns": [
                {
                    "id": "GHSA-8qvm-5x2c-j2w7",
                    "fix_versions": [
                        "4.25.8",
                        "5.29.5",
                        "6.31.1"
                    ],
                    "aliases": [
                        "CVE-2025-4565"
                    ],
                    "description": "### Summary Any project that uses Protobuf pure-Python backend to parse untrusted Protocol Buffers data containing an arbitrary number of **recursive groups**, **recursive messages** or **a series of [`SGROUP`](https://protobuf.dev/programming-guides/encoding/#groups) tags** can be corrupted by exceeding the Python recursion limit.  Reporter: Alexis Challande, Trail of Bits Ecosystem Security Team [ecosystem@trailofbits.com](mailto:ecosystem@trailofbits.com)  Affected versions: This issue only affects the [pure-Python implementation](https://github.com/protocolbuffers/protobuf/tree/main/python#implementation-backends) of protobuf-python backend. This is the implementation when `PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python` environment variable is set or the default when protobuf is used from Bazel or pure-Python PyPi wheels. CPython PyPi wheels do not use pure-Python by default.  This is a Python variant of a [previous issue affecting protobuf-java](https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-735f-pc8j-v9w8).  ### Severity This is a potential Denial of Service. Parsing nested protobuf data creates unbounded recursions that can be abused by an attacker.  ### Proof of Concept For reproduction details, please refer to the unit tests [decoder_test.py](https://github.com/protocolbuffers/protobuf/blob/main/python/google/protobuf/internal/decoder_test.py#L87-L98) and [message_test](https://github.com/protocolbuffers/protobuf/blob/main/python/google/protobuf/internal/message_test.py#L1436-L1478)  ### Remediation and Mitigation A mitigation is available now. Please update to the latest available versions of the following packages: * protobuf-python(4.25.8, 5.29.5, 6.31.1)"
                }
            ]
        },
        {
            "name": "psutil",
            "version": "6.1.0",
            "vulns": []
        },
        {
            "name": "ptyprocess",
            "version": "0.7.0",
            "vulns": []
        },
        {
            "name": "pure-eval",
            "version": "0.2.2",
            "vulns": []
        },
        {
            "name": "py-cpuinfo",
            "version": "9.0.0",
            "vulns": []
        },
        {
            "name": "py-serializable",
            "version": "2.1.0",
            "vulns": []
        },
        {
            "name": "pyarrow",
            "version": "14.0.2",
            "vulns": [
                {
                    "id": "PYSEC-2024-161",
                    "fix_versions": [
                        "17.0.0"
                    ],
                    "aliases": [
                        "CVE-2024-52338"
                    ],
                    "description": "Deserialization of untrusted data in IPC and Parquet readers in the Apache Arrow R package versions\u00a04.0.0 through 16.1.0 allows arbitrary code execution. An application is vulnerable if it  reads Arrow IPC, Feather or Parquet data from untrusted sources (for  example, user-supplied input files). This vulnerability only affects the arrow R package, not other Apache Arrow  implementations or bindings unless those bindings are specifically used via the R package (for example, an R application that embeds a Python interpreter and uses PyArrow to read files from untrusted sources is still vulnerable if the arrow R package is an affected version). It is recommended that users of the arrow R package upgrade to 17.0.0 or later. Similarly, it  is recommended that downstream libraries upgrade their dependency  requirements to arrow 17.0.0 or later. If using an affected version of the package, untrusted data can read into a Table and its internal to_data_frame() method can be used as a workaround (e.g., read_parquet(..., as_data_frame = FALSE)$to_data_frame()).   This issue affects the Apache Arrow R package: from 4.0.0 through 16.1.0.   Users are recommended to upgrade to version 17.0.0, which fixes the issue."
                }
            ]
        },
        {
            "name": "pyasn1",
            "version": "0.4.8",
            "vulns": []
        },
        {
            "name": "pyasn1-modules",
            "version": "0.2.8",
            "vulns": []
        },
        {
            "name": "pycodestyle",
            "version": "2.12.1",
            "vulns": []
        },
        {
            "name": "pycosat",
            "version": "0.6.6",
            "vulns": []
        },
        {
            "name": "pycparser",
            "version": "2.21",
            "vulns": []
        },
        {
            "name": "pyct",
            "version": "0.5.0",
            "vulns": []
        },
        {
            "name": "pycurl",
            "version": "7.45.2",
            "vulns": []
        },
        {
            "name": "pydantic",
            "version": "2.10.4",
            "vulns": []
        },
        {
            "name": "pydantic-core",
            "version": "2.27.2",
            "vulns": []
        },
        {
            "name": "pydeck",
            "version": "0.8.0",
            "vulns": []
        },
        {
            "name": "pydispatcher",
            "version": "2.0.5",
            "vulns": []
        },
        {
            "name": "pydocstyle",
            "version": "6.3.0",
            "vulns": []
        },
        {
            "name": "pyerfa",
            "version": "2.0.0",
            "vulns": []
        },
        {
            "name": "pyflakes",
            "version": "3.2.0",
            "vulns": []
        },
        {
            "name": "pygments",
            "version": "2.15.1",
            "vulns": []
        },
        {
            "name": "pyjwt",
            "version": "2.9.0",
            "vulns": []
        },
        {
            "name": "pylint",
            "version": "2.16.2",
            "vulns": []
        },
        {
            "name": "pylint-venv",
            "version": "2.3.0",
            "vulns": []
        },
        {
            "name": "pyls-spyder",
            "version": "0.4.0",
            "vulns": []
        },
        {
            "name": "pymongo",
            "version": "4.9.2",
            "vulns": []
        },
        {
            "name": "pynacl",
            "version": "1.6.0",
            "vulns": []
        },
        {
            "name": "pyobjc-core",
            "version": "9.0",
            "vulns": []
        },
        {
            "name": "pyobjc-framework-cocoa",
            "version": "9.0",
            "vulns": []
        },
        {
            "name": "pyobjc-framework-coreservices",
            "version": "9.0",
            "vulns": []
        },
        {
            "name": "pyobjc-framework-fsevents",
            "version": "9.0",
            "vulns": []
        },
        {
            "name": "pyodbc",
            "version": "5.0.1",
            "vulns": []
        },
        {
            "name": "pyopenssl",
            "version": "24.0.0",
            "vulns": []
        },
        {
            "name": "pyparsing",
            "version": "3.0.9",
            "vulns": []
        },
        {
            "name": "pyqt5",
            "version": "5.15.10",
            "vulns": []
        },
        {
            "name": "pyqt5-sip",
            "version": "12.13.0",
            "vulns": []
        },
        {
            "name": "pyqtwebengine",
            "version": "5.15.6",
            "vulns": []
        },
        {
            "name": "pysocks",
            "version": "1.7.1",
            "vulns": []
        },
        {
            "name": "pytest",
            "version": "8.4.2",
            "vulns": []
        },
        {
            "name": "pytest-asyncio",
            "version": "0.24.0",
            "vulns": []
        },
        {
            "name": "pytest-cov",
            "version": "5.0.0",
            "vulns": []
        },
        {
            "name": "python-dateutil",
            "version": "2.8.2",
            "vulns": []
        },
        {
            "name": "python-dotenv",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "python-jose",
            "version": "3.3.0",
            "vulns": [
                {
                    "id": "PYSEC-2024-232",
                    "fix_versions": [
                        "3.4.0"
                    ],
                    "aliases": [
                        "CVE-2024-33663"
                    ],
                    "description": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217."
                },
                {
                    "id": "PYSEC-2024-233",
                    "fix_versions": [
                        "3.4.0"
                    ],
                    "aliases": [
                        "CVE-2024-33664"
                    ],
                    "description": "python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319."
                }
            ]
        },
        {
            "name": "python-json-logger",
            "version": "2.0.7",
            "vulns": []
        },
        {
            "name": "python-lsp-black",
            "version": "1.2.1",
            "vulns": []
        },
        {
            "name": "python-lsp-jsonrpc",
            "version": "1.0.0",
            "vulns": []
        },
        {
            "name": "python-lsp-server",
            "version": "1.7.2",
            "vulns": []
        },
        {
            "name": "python-multipart",
            "version": "0.0.17",
            "vulns": [
                {
                    "id": "GHSA-59g5-xgcq-4qw3",
                    "fix_versions": [
                        "0.0.18"
                    ],
                    "aliases": [
                        "CVE-2024-53981"
                    ],
                    "description": "### Summary  When parsing form data, `python-multipart` skips line breaks (CR `\\r` or LF `\\n`) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs.  An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS).  ### Impact  Applications that use `python-multipart` to parse form data (or use frameworks that do so) are affected.   ### Original Report  This security issue was reported by: - GitHub security advisory in Starlette on October 30 by @Startr4ck - Email to `python-multipart` maintainer on October 3 by @mnqazi"
                }
            ]
        },
        {
            "name": "python-slugify",
            "version": "8.0.4",
            "vulns": []
        },
        {
            "name": "python-snappy",
            "version": "0.6.1",
            "vulns": []
        },
        {
            "name": "pytoolconfig",
            "version": "1.2.6",
            "vulns": []
        },
        {
            "name": "pytz",
            "version": "2023.3.post1",
            "vulns": []
        },
        {
            "name": "pyviz-comms",
            "version": "3.0.0",
            "vulns": []
        },
        {
            "name": "pywavelets",
            "version": "1.9.0",
            "vulns": []
        },
        {
            "name": "pyyaml",
            "version": "6.0.1",
            "vulns": []
        },
        {
            "name": "pyzmq",
            "version": "25.1.2",
            "vulns": []
        },
        {
            "name": "qdarkstyle",
            "version": "3.0.2",
            "vulns": []
        },
        {
            "name": "qstylizer",
            "version": "0.2.2",
            "vulns": []
        },
        {
            "name": "qtawesome",
            "version": "1.2.2",
            "vulns": []
        },
        {
            "name": "qtconsole",
            "version": "5.4.2",
            "vulns": []
        },
        {
            "name": "qtpy",
            "version": "2.4.1",
            "vulns": []
        },
        {
            "name": "queuelib",
            "version": "1.6.2",
            "vulns": []
        },
        {
            "name": "redis",
            "version": "5.2.1",
            "vulns": []
        },
        {
            "name": "referencing",
            "version": "0.30.2",
            "vulns": []
        },
        {
            "name": "regex",
            "version": "2023.10.3",
            "vulns": []
        },
        {
            "name": "requests",
            "version": "2.32.5",
            "vulns": []
        },
        {
            "name": "requests-file",
            "version": "1.5.1",
            "vulns": []
        },
        {
            "name": "requests-toolbelt",
            "version": "1.0.0",
            "vulns": []
        },
        {
            "name": "rfc3339-validator",
            "version": "0.1.4",
            "vulns": []
        },
        {
            "name": "rfc3986-validator",
            "version": "0.1.1",
            "vulns": []
        },
        {
            "name": "rich",
            "version": "13.3.5",
            "vulns": []
        },
        {
            "name": "rope",
            "version": "1.7.0",
            "vulns": []
        },
        {
            "name": "rpds-py",
            "version": "0.10.6",
            "vulns": []
        },
        {
            "name": "rsa",
            "version": "4.9.1",
            "vulns": []
        },
        {
            "name": "rtree",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "ruamel-yaml",
            "version": "0.17.21",
            "vulns": []
        },
        {
            "name": "ruamel-yaml-conda",
            "skip_reason": "Dependency not found on PyPI and could not be audited: ruamel-yaml-conda (0.17.21)"
        },
        {
            "name": "s3fs",
            "version": "2023.10.0",
            "vulns": []
        },
        {
            "name": "schedule",
            "version": "1.2.2",
            "vulns": []
        },
        {
            "name": "scikit-image",
            "version": "0.22.0",
            "vulns": []
        },
        {
            "name": "scikit-learn",
            "version": "1.5.2",
            "vulns": []
        },
        {
            "name": "scipy",
            "version": "1.16.2",
            "vulns": []
        },
        {
            "name": "seaborn",
            "version": "0.12.2",
            "vulns": []
        },
        {
            "name": "semver",
            "version": "2.13.0",
            "vulns": []
        },
        {
            "name": "send2trash",
            "version": "1.8.2",
            "vulns": []
        },
        {
            "name": "service-identity",
            "version": "18.1.0",
            "vulns": []
        },
        {
            "name": "setuptools",
            "version": "68.2.2",
            "vulns": [
                {
                    "id": "PYSEC-2025-49",
                    "fix_versions": [
                        "78.1.1"
                    ],
                    "aliases": [
                        "GHSA-5rjg-fvgr-3xxf",
                        "CVE-2025-47273"
                    ],
                    "description": "setuptools is a package that allows users to download, build, install, upgrade, and uninstall Python packages. A path traversal vulnerability in `PackageIndex` is present in setuptools prior to version 78.1.1. An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to remote code execution depending on the context. Version 78.1.1 fixes the issue."
                }
            ]
        },
        {
            "name": "sip",
            "version": "6.7.12",
            "vulns": []
        },
        {
            "name": "six",
            "version": "1.16.0",
            "vulns": []
        },
        {
            "name": "smart-open",
            "version": "5.2.1",
            "vulns": []
        },
        {
            "name": "smmap",
            "version": "4.0.0",
            "vulns": []
        },
        {
            "name": "sniffio",
            "version": "1.3.0",
            "vulns": []
        },
        {
            "name": "snowballstemmer",
            "version": "2.2.0",
            "vulns": []
        },
        {
            "name": "sortedcontainers",
            "version": "2.4.0",
            "vulns": []
        },
        {
            "name": "soupsieve",
            "version": "2.5",
            "vulns": []
        },
        {
            "name": "sphinx",
            "version": "5.0.2",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-applehelp",
            "version": "1.0.2",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-devhelp",
            "version": "1.0.2",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-htmlhelp",
            "version": "2.0.0",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-jsmath",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-qthelp",
            "version": "1.0.3",
            "vulns": []
        },
        {
            "name": "sphinxcontrib-serializinghtml",
            "version": "1.1.5",
            "vulns": []
        },
        {
            "name": "spyder",
            "version": "5.4.3",
            "vulns": []
        },
        {
            "name": "spyder-kernels",
            "version": "2.4.4",
            "vulns": []
        },
        {
            "name": "sqlalchemy",
            "version": "2.0.35",
            "vulns": []
        },
        {
            "name": "stack-data",
            "version": "0.2.0",
            "vulns": []
        },
        {
            "name": "starlette",
            "version": "0.48.0",
            "vulns": []
        },
        {
            "name": "statsmodels",
            "version": "0.14.0",
            "vulns": []
        },
        {
            "name": "sympy",
            "version": "1.12",
            "vulns": []
        },
        {
            "name": "tables",
            "version": "3.9.2",
            "vulns": []
        },
        {
            "name": "tabulate",
            "version": "0.9.0",
            "vulns": []
        },
        {
            "name": "tblib",
            "version": "1.7.0",
            "vulns": []
        },
        {
            "name": "tenacity",
            "version": "8.2.2",
            "vulns": []
        },
        {
            "name": "terminado",
            "version": "0.17.1",
            "vulns": []
        },
        {
            "name": "text-unidecode",
            "version": "1.3",
            "vulns": []
        },
        {
            "name": "textdistance",
            "version": "4.2.1",
            "vulns": []
        },
        {
            "name": "threadpoolctl",
            "version": "3.6.0",
            "vulns": []
        },
        {
            "name": "three-merge",
            "version": "0.1.1",
            "vulns": []
        },
        {
            "name": "tifffile",
            "version": "2023.4.12",
            "vulns": []
        },
        {
            "name": "tiktoken",
            "version": "0.11.0",
            "vulns": []
        },
        {
            "name": "tinycss2",
            "version": "1.2.1",
            "vulns": []
        },
        {
            "name": "tldextract",
            "version": "3.2.0",
            "vulns": []
        },
        {
            "name": "toml",
            "version": "0.10.2",
            "vulns": []
        },
        {
            "name": "tomlkit",
            "version": "0.11.1",
            "vulns": []
        },
        {
            "name": "toolz",
            "version": "0.12.0",
            "vulns": []
        },
        {
            "name": "tornado",
            "version": "6.3.3",
            "vulns": [
                {
                    "id": "GHSA-753j-mpmx-qq6g",
                    "fix_versions": [
                        "6.4.1"
                    ],
                    "aliases": [],
                    "description": "### Summary When Tornado receives a request with two `Transfer-Encoding: chunked` headers, it ignores them both. This enables request smuggling when Tornado is deployed behind a proxy server that emits such requests. [Pound](https://en.wikipedia.org/wiki/Pound_(networking)) does this.  ### PoC 0. Install Tornado. 1. Start a simple Tornado server that echoes each received request's body: ```bash cat << EOF > server.py import asyncio import tornado  class MainHandler(tornado.web.RequestHandler):     def post(self):         self.write(self.request.body)  async def main():     tornado.web.Application([(r\"/\", MainHandler)]).listen(8000)     await asyncio.Event().wait()  asyncio.run(main()) EOF python3 server.py & ``` 2. Send a valid chunked request: ```bash printf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n1\\r\\nZ\\r\\n0\\r\\n\\r\\n' | nc localhost 8000 ``` 3. Observe that the response is as expected: ``` HTTP/1.1 200 OK Server: TornadoServer/6.3.3 Content-Type: text/html; charset=UTF-8 Date: Sat, 07 Oct 2023 17:32:05 GMT Content-Length: 1  Z ``` 4. Send a request with two `Transfer-Encoding: chunked` headers: ``` printf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n1\\r\\nZ\\r\\n0\\r\\n\\r\\n' | nc localhost 8000 ``` 5. Observe the strange response: ``` HTTP/1.1 200 OK Server: TornadoServer/6.3.3 Content-Type: text/html; charset=UTF-8 Date: Sat, 07 Oct 2023 17:35:40 GMT Content-Length: 0  HTTP/1.1 400 Bad Request  ``` This is because Tornado believes that the request has no message body, so it tries to interpret `1\\r\\nZ\\r\\n0\\r\\n\\r\\n` as its own request, which causes a 400 response. With a little cleverness involving `chunk-ext`s, you can get Tornado to instead respond 405, which has the potential to desynchronize the connection, as opposed to 400 which should always result in a connection closure.  ### Impact Anyone using Tornado behind a proxy that forwards requests containing multiple `Transfer-Encoding: chunked` headers is vulnerable to request smuggling, which may entail ACL bypass, cache poisoning, or connection desynchronization. "
                },
                {
                    "id": "GHSA-w235-7p84-xx57",
                    "fix_versions": [
                        "6.4.1"
                    ],
                    "aliases": [],
                    "description": "### Summary Tornado\u2019s `curl_httpclient.CurlAsyncHTTPClient` class is vulnerable to CRLF (carriage return/line feed) injection in the request headers.  ### Details When an HTTP request is sent using `CurlAsyncHTTPClient`, Tornado does not reject carriage return (\\r) or line feed (\\n) characters in the request headers. As a result, if an application includes an attacker-controlled header value in a request sent using `CurlAsyncHTTPClient`, the attacker can inject arbitrary headers into the request or cause the application to send arbitrary requests to the specified server.  This behavior differs from that of the standard `AsyncHTTPClient` class, which does reject CRLF characters.  This issue appears to stem from libcurl's (as well as pycurl's) lack of validation for the [`HTTPHEADER`](https://curl.se/libcurl/c/CURLOPT_HTTPHEADER.html) option. libcurl\u2019s documentation states:  > The headers included in the linked list must not be CRLF-terminated, because libcurl adds CRLF after each header item itself. Failure to comply with this might result in strange behavior. libcurl passes on the verbatim strings you give it, without any filter or other safe guards. That includes white space and control characters.  pycurl similarly appears to assume that the headers adhere to the correct format. Therefore, without any validation on Tornado\u2019s part, header names and values are included verbatim in the request sent by `CurlAsyncHTTPClient`, including any control characters that have special meaning in HTTP semantics.  ### PoC The issue can be reproduced using the following script:  ```python import asyncio  from tornado import httpclient from tornado import curl_httpclient  async def main():     http_client = curl_httpclient.CurlAsyncHTTPClient()      request = httpclient.HTTPRequest(         # Burp Collaborator payload         \"http://727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com/\",         method=\"POST\",         body=\"body\",         # Injected header using CRLF characters         headers={\"Foo\": \"Bar\\r\\nHeader: Injected\"}     )      response = await http_client.fetch(request)     print(response.body)      http_client.close()  if __name__ == \"__main__\":     asyncio.run(main()) ```  When the specified server receives the request, it contains the injected header (`Header: Injected`) on its own line:  ```http POST / HTTP/1.1 Host: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com User-Agent: Mozilla/5.0 (compatible; pycurl) Accept: */* Accept-Encoding: gzip,deflate Foo: Bar Header: Injected Content-Length: 4 Content-Type: application/x-www-form-urlencoded  body ```  The attacker can also construct entirely new requests using a payload with multiple CRLF sequences. For example, specifying a header value of `\\r\\n\\r\\nPOST /attacker-controlled-url HTTP/1.1\\r\\nHost: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com` results in the server receiving an additional, attacker-controlled request:  ```http POST /attacker-controlled-url HTTP/1.1 Host: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com Content-Length: 4 Content-Type: application/x-www-form-urlencoded  body ```  ### Impact Applications using the Tornado library to send HTTP requests with untrusted header data are affected. This issue may facilitate the exploitation of server-side request forgery (SSRF) vulnerabilities."
                },
                {
                    "id": "GHSA-7cx3-6m66-7c5m",
                    "fix_versions": [
                        "6.5"
                    ],
                    "aliases": [
                        "CVE-2025-47287"
                    ],
                    "description": "### Summary  When Tornado's ``multipart/form-data`` parser encounters certain errors, it logs a warning but continues trying to parse the remainder of the data. This allows remote attackers to generate an extremely high volume of logs, constituting a DoS attack. This DoS is compounded by the fact that the logging subsystem is synchronous.  ### Affected versions  All versions of Tornado prior to 6.5 are affected. The vulnerable parser is enabled by default.  ### Solution  Upgrade to Tornado version 6.5. In the meantime, risk can be mitigated by blocking `Content-Type: multipart/form-data` in a proxy."
                },
                {
                    "id": "GHSA-8w49-h785-mj3c",
                    "fix_versions": [
                        "6.4.2"
                    ],
                    "aliases": [
                        "CVE-2024-52804"
                    ],
                    "description": "The algorithm used for parsing HTTP cookies in Tornado versions prior to 6.4.2 sometimes has quadratic complexity, leading to excessive CPU consumption when parsing maliciously-crafted cookie headers. This parsing occurs in the event loop thread and may block the processing of other requests.  See also CVE-2024-7592 for a similar vulnerability in cpython."
                }
            ]
        },
        {
            "name": "tqdm",
            "version": "4.65.0",
            "vulns": [
                {
                    "id": "GHSA-g7vv-2v7x-gj9p",
                    "fix_versions": [
                        "4.66.3"
                    ],
                    "aliases": [
                        "CVE-2024-34062"
                    ],
                    "description": "### Impact Any optional non-boolean CLI arguments (e.g. `--delim`, `--buf-size`, `--manpath`) are passed through python's `eval`, allowing arbitrary code execution. Example:  ```sh python -m tqdm --manpath=\"\\\" + str(exec(\\\"import os\\nos.system('echo hi && killall python3')\\\")) + \\\"\" ```  ### Patches https://github.com/tqdm/tqdm/commit/4e613f84ed2ae029559f539464df83fa91feb316 released in `tqdm>=4.66.3`  ### Workarounds None  ### References - https://github.com/tqdm/tqdm/releases/tag/v4.66.3"
                }
            ]
        },
        {
            "name": "traitlets",
            "version": "5.7.1",
            "vulns": []
        },
        {
            "name": "truststore",
            "version": "0.8.0",
            "vulns": []
        },
        {
            "name": "typing-extensions",
            "version": "4.15.0",
            "vulns": []
        },
        {
            "name": "tzdata",
            "version": "2025.2",
            "vulns": []
        },
        {
            "name": "tzlocal",
            "version": "2.1",
            "vulns": []
        },
        {
            "name": "uc-micro-py",
            "version": "1.0.1",
            "vulns": []
        },
        {
            "name": "ujson",
            "version": "5.4.0",
            "vulns": []
        },
        {
            "name": "unidecode",
            "version": "1.2.0",
            "vulns": []
        },
        {
            "name": "urllib3",
            "version": "2.0.7",
            "vulns": [
                {
                    "id": "GHSA-34jh-p97f-mpxf",
                    "fix_versions": [
                        "1.26.19",
                        "2.2.2"
                    ],
                    "aliases": [
                        "CVE-2024-37891"
                    ],
                    "description": "When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected.  However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.  Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident.  Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.  ## Affected usages  We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:  * Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. * Not disabling HTTP redirects. * Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.  ## Remediation  * Using the `Proxy-Authorization` header with urllib3's `ProxyManager`. * Disabling HTTP redirects using `redirects=False` when sending requests. * Not using the `Proxy-Authorization` header."
                },
                {
                    "id": "GHSA-pq67-6m6q-mj2v",
                    "fix_versions": [
                        "2.5.0"
                    ],
                    "aliases": [
                        "CVE-2025-50181"
                    ],
                    "description": "urllib3 handles redirects and retries using the same mechanism, which is controlled by the `Retry` object. The most common way to disable redirects is at the request level, as follows:  ```python resp = urllib3.request(\"GET\", \"https://httpbin.org/redirect/1\", redirect=False) print(resp.status) # 302 ```  However, it is also possible to disable redirects, for all requests, by instantiating a `PoolManager` and specifying `retries` in a way that disable redirects:  ```python import urllib3  http = urllib3.PoolManager(retries=0)  # should raise MaxRetryError on redirect http = urllib3.PoolManager(retries=urllib3.Retry(redirect=0))  # equivalent to the above http = urllib3.PoolManager(retries=False)  # should return the first response  resp = http.request(\"GET\", \"https://httpbin.org/redirect/1\") ```  However, the `retries` parameter is currently ignored, which means all the above examples don't disable redirects.  ## Affected usages  Passing `retries` on `PoolManager` instantiation to disable redirects or restrict their number.  By default, requests and botocore users are not affected.  ## Impact  Redirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable.  ## Remediation  You can remediate this vulnerability with the following steps:   * Upgrade to a patched version of urllib3. If your organization would benefit from the continued support of urllib3 1.x, please contact [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com) to discuss sponsorship or contribution opportunities.  * Disable redirects at the `request()` level instead of the `PoolManager()` level."
                }
            ]
        },
        {
            "name": "uvicorn",
            "version": "0.34.0",
            "vulns": []
        },
        {
            "name": "validators",
            "version": "0.18.2",
            "vulns": []
        },
        {
            "name": "vine",
            "version": "5.1.0",
            "vulns": []
        },
        {
            "name": "w3lib",
            "version": "2.1.2",
            "vulns": []
        },
        {
            "name": "watchdog",
            "version": "2.1.6",
            "vulns": []
        },
        {
            "name": "wcwidth",
            "version": "0.2.5",
            "vulns": []
        },
        {
            "name": "webencodings",
            "version": "0.5.1",
            "vulns": []
        },
        {
            "name": "websocket-client",
            "version": "0.58.0",
            "vulns": []
        },
        {
            "name": "werkzeug",
            "version": "2.2.3",
            "vulns": [
                {
                    "id": "PYSEC-2023-221",
                    "fix_versions": [
                        "2.3.8",
                        "3.0.1"
                    ],
                    "aliases": [
                        "CVE-2023-46136",
                        "GHSA-hrfv-mqp8-q5rw"
                    ],
                    "description": "Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."
                },
                {
                    "id": "GHSA-2g68-c3qc-8985",
                    "fix_versions": [
                        "3.0.3"
                    ],
                    "aliases": [
                        "CVE-2024-34069"
                    ],
                    "description": "The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger."
                },
                {
                    "id": "GHSA-f9vj-2wh5-fj8j",
                    "fix_versions": [
                        "3.0.6"
                    ],
                    "aliases": [
                        "CVE-2024-49766"
                    ],
                    "description": "On Python < 3.11 on Windows, `os.path.isabs()` does not catch UNC paths like `//server/share`. Werkzeug's `safe_join()` relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python >= 3.11, or not using Windows, are not vulnerable."
                },
                {
                    "id": "GHSA-q34m-jh98-gwm2",
                    "fix_versions": [
                        "3.0.6"
                    ],
                    "aliases": [
                        "CVE-2024-49767"
                    ],
                    "description": "Applications using Werkzeug to parse `multipart/form-data` requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the `Request.max_form_memory_size` setting.   The `Request.max_content_length` setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application."
                }
            ]
        },
        {
            "name": "whatthepatch",
            "version": "1.0.2",
            "vulns": []
        },
        {
            "name": "wheel",
            "version": "0.41.2",
            "vulns": []
        },
        {
            "name": "widgetsnbextension",
            "version": "3.5.2",
            "vulns": []
        },
        {
            "name": "wrapt",
            "version": "1.14.1",
            "vulns": []
        },
        {
            "name": "wurlitzer",
            "version": "3.0.2",
            "vulns": []
        },
        {
            "name": "xarray",
            "version": "2023.6.0",
            "vulns": []
        },
        {
            "name": "xlwings",
            "version": "0.29.1",
            "vulns": []
        },
        {
            "name": "xyzservices",
            "version": "2022.9.0",
            "vulns": []
        },
        {
            "name": "yapf",
            "version": "0.31.0",
            "vulns": []
        },
        {
            "name": "yarl",
            "version": "1.22.0",
            "vulns": []
        },
        {
            "name": "zict",
            "version": "3.0.0",
            "vulns": []
        },
        {
            "name": "zipp",
            "version": "3.17.0",
            "vulns": []
        },
        {
            "name": "zope-interface",
            "version": "5.4.0",
            "vulns": []
        },
        {
            "name": "zstandard",
            "version": "0.19.0",
            "vulns": []
        }
    ],
    "fixes": []
}
