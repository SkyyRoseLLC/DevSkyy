version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: devskyy-dev-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: dev123
      MONGO_INITDB_DATABASE: devskyy_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - devskyy-dev-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: devskyy-dev-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - devskyy-dev-network

  # DevSkyy Backend (Development)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: devskyy-dev-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DEBUG=true
      - MONGODB_URL=mongodb://admin:dev123@mongodb:27017/devskyy_dev?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-for-development-only
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/frontend/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - devskyy-dev-network
    command: ["python", "main.py"]

  # Frontend Development Server
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: devskyy-dev-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - devskyy-dev-network
    command: ["npm", "run", "dev"]

networks:
  devskyy-dev-network:
    driver: bridge

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local