# ============================================================================
# DEVSKYY ENTERPRISE PLATFORM - PRE-COMMIT CONFIGURATION
# World-Class Code Quality Gates for Unicorn-Level Standards
# Version: 5.2.0
# ============================================================================

repos:
  # ============================================================================
  # BASIC FILE HYGIENE
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-added-large-files
        args: [--maxkb=10240]  # 10MB limit
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer
      - id: sort-simple-yaml
      - id: file-contents-sorter
        files: '^\.gitignore$'

  # ============================================================================
  # PYTHON CODE FORMATTING
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88, --target-version=py311]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/pycqa/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # ============================================================================
  # PYTHON LINTING & STATIC ANALYSIS
  # ============================================================================
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503,E501
          - --max-complexity=10
          - --statistics
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
          - flake8-docstrings
          - flake8-annotations
          - flake8-bandit
          - flake8-broken-line
          - flake8-commas
          - flake8-debugger
          - flake8-eradicate
          - flake8-fixme
          - flake8-import-order
          - flake8-logging-format
          - flake8-pie
          - flake8-print
          - flake8-pytest-style
          - flake8-return
          - flake8-secure-coding-standard
          - flake8-simplify
          - flake8-string-format
          - flake8-unused-arguments
          - flake8-use-fstring

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        args: [--strict, --ignore-missing-imports]
        additional_dependencies:
          - types-requests
          - types-redis
          - types-PyYAML
          - types-python-dateutil
          - types-setuptools
          - types-urllib3

  # ============================================================================
  # SECURITY SCANNING
  # ============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [-r, -f, json, -o, bandit-report.json]
        exclude: ^tests/

  - repo: https://github.com/gitguardian/ggshield
    rev: v1.32.1
    hooks:
      - id: ggshield
        language: python
        stages: [commit]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

  # ============================================================================
  # DEPENDENCY SECURITY
  # ============================================================================
  - repo: https://github.com/pyupio/safety
    rev: 3.2.11
    hooks:
      - id: safety
        args: [--json, --output, safety-report.json]

  - repo: https://github.com/trailofbits/pip-audit
    rev: v2.7.3
    hooks:
      - id: pip-audit
        args: [--format=json, --output=pip-audit-report.json]

  # ============================================================================
  # DOCUMENTATION & COMMENTS
  # ============================================================================
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google, --add-ignore=D100,D104,D105,D107]

  - repo: https://github.com/econchick/interrogate
    rev: 1.7.0
    hooks:
      - id: interrogate
        args: [--ignore-init-method, --ignore-init-module, --ignore-magic, --ignore-module, --ignore-nested-functions, --fail-under=70]

  # ============================================================================
  # YAML & JSON VALIDATION
  # ============================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-d, relaxed]

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.29.4
    hooks:
      - id: check-github-workflows
      - id: check-github-actions
      - id: check-dependabot

  # ============================================================================
  # DOCKER & CONTAINERIZATION
  # ============================================================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # ============================================================================
  # SQL & DATABASE
  # ============================================================================
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.2.5
    hooks:
      - id: sqlfluff-lint
        args: [--dialect=postgres]
      - id: sqlfluff-fix
        args: [--dialect=postgres]

  # ============================================================================
  # TERRAFORM & INFRASTRUCTURE
  # ============================================================================
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.96.1
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_docs
      - id: terraform_tflint
      - id: terraform_tfsec
        args: [--args=--soft-fail]

  # ============================================================================
  # SHELL SCRIPTS
  # ============================================================================
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.10.0-1
    hooks:
      - id: shfmt
        args: [-w, -s, -i, '2']

  # ============================================================================
  # MARKDOWN & DOCUMENTATION
  # ============================================================================
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: [--fix]

  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.21
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black

  # ============================================================================
  # COMMIT MESSAGE VALIDATION
  # ============================================================================
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.29.1
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # ============================================================================
  # CUSTOM ENTERPRISE HOOKS
  # ============================================================================
  - repo: local
    hooks:
      # Enterprise License Check
      - id: license-check
        name: License Header Check
        entry: python scripts/check_license_headers.py
        language: python
        files: \.py$
        pass_filenames: true

      # API Documentation Check
      - id: api-docs-check
        name: API Documentation Check
        entry: python scripts/check_api_docs.py
        language: python
        files: ^api/.*\.py$
        pass_filenames: true

      # Fashion Industry Compliance Check
      - id: fashion-compliance-check
        name: Fashion Industry Compliance Check
        entry: python scripts/check_fashion_compliance.py
        language: python
        files: ^fashion/.*\.py$
        pass_filenames: true

      # Performance Benchmark Check
      - id: performance-check
        name: Performance Benchmark Check
        entry: python scripts/check_performance_benchmarks.py
        language: python
        files: \.py$
        pass_filenames: false

      # Database Migration Check
      - id: migration-check
        name: Database Migration Check
        entry: python scripts/check_migrations.py
        language: python
        files: ^migrations/.*\.py$
        pass_filenames: true

      # Security Configuration Check
      - id: security-config-check
        name: Security Configuration Check
        entry: python scripts/check_security_config.py
        language: python
        files: ^(config|settings)/.*\.(py|yaml|yml|json)$
        pass_filenames: true

      # Enterprise Logging Check
      - id: logging-check
        name: Enterprise Logging Standards Check
        entry: python scripts/check_logging_standards.py
        language: python
        files: \.py$
        pass_filenames: true

      # Fashion Data Validation
      - id: fashion-data-validation
        name: Fashion Data Validation
        entry: python scripts/validate_fashion_data.py
        language: python
        files: ^fashion/data/.*\.(json|yaml|yml)$
        pass_filenames: true

      # API Rate Limiting Check
      - id: rate-limiting-check
        name: API Rate Limiting Check
        entry: python scripts/check_rate_limiting.py
        language: python
        files: ^api/.*\.py$
        pass_filenames: true

      # Monitoring Configuration Check
      - id: monitoring-check
        name: Monitoring Configuration Check
        entry: python scripts/check_monitoring_config.py
        language: python
        files: ^(monitoring|observability)/.*\.(py|yaml|yml)$
        pass_filenames: true

# ============================================================================
# GLOBAL CONFIGURATION
# ============================================================================
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# CI Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
