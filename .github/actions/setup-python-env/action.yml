name: 'Setup Python Environment'
description: 'Composite action to setup Python with caching and dependencies'
author: 'DevSkyy Enterprise Team'

inputs:
  python-version:
    description: 'Python version to setup'
    required: false
    default: '3.11'
  cache-key-suffix:
    description: 'Additional suffix for cache key'
    required: false
    default: ''
  install-dev-deps:
    description: 'Install development dependencies'
    required: false
    default: 'false'
  requirements-file:
    description: 'Requirements file to install'
    required: false
    default: 'requirements.txt'

outputs:
  python-version:
    description: 'Installed Python version'
    value: ${{ steps.setup-python.outputs.python-version }}
  cache-hit:
    description: 'Whether cache was hit'
    value: ${{ steps.cache-deps.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: 🐍 Setup Python ${{ inputs.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: 💾 Cache Python Dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.local/lib/python${{ inputs.python-version }}/site-packages
        key: python-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles(inputs.requirements-file, 'requirements-dev.txt', 'pyproject.toml') }}-${{ inputs.cache-key-suffix }}
        restore-keys: |
          python-${{ inputs.python-version }}-${{ runner.os }}-
          python-${{ inputs.python-version }}-

    - name: 📦 Upgrade pip and install build tools
      shell: bash
      run: |
        python -m pip install --upgrade pip wheel setuptools

    - name: 📦 Install Dependencies
      shell: bash
      run: |
        if [ -f "${{ inputs.requirements-file }}" ]; then
          echo "Installing from ${{ inputs.requirements-file }}"
          pip install -r "${{ inputs.requirements-file }}"
        else
          echo "Requirements file ${{ inputs.requirements-file }} not found"
        fi

    - name: 📦 Install Development Dependencies
      if: inputs.install-dev-deps == 'true'
      shell: bash
      run: |
        if [ -f "requirements-dev.txt" ]; then
          echo "Installing development dependencies"
          pip install -r requirements-dev.txt
        fi
        
        # Install common development tools
        pip install pytest pytest-asyncio pytest-cov black isort flake8 mypy

    - name: 📊 Environment Summary
      shell: bash
      run: |
        echo "## 🐍 Python Environment Setup" >> $GITHUB_STEP_SUMMARY
        echo "- Python Version: $(python --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Pip Version: $(pip --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Cache Hit: ${{ steps.cache-deps.outputs.cache-hit }}" >> $GITHUB_STEP_SUMMARY
        echo "- Installed Packages: $(pip list | wc -l)" >> $GITHUB_STEP_SUMMARY
