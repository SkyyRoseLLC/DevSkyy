name: TODO Tracking & Management

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'sync'
        type: choice
        options:
          - sync
          - report
          - scan
          - dashboard

jobs:
  todo-tracking:
    name: TODO Tracking & Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Full history for comprehensive analysis

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install TODO Tracker Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn jinja2 python-multipart

      - name: Sync TODOs with Codebase
        run: |
          cd tools
          python todo_tracker.py sync
        if: github.event.inputs.action == 'sync' || github.event.inputs.action == ''

      - name: Generate TODO Report
        run: |
          cd tools
          python todo_tracker.py report --output ../todo-report.json
          python todo_tracker.py list --priority critical > ../critical-todos.txt
          python todo_tracker.py list --priority high > ../high-priority-todos.txt

      - name: Scan for New TODOs
        run: |
          cd tools
          python todo_tracker.py scan
        if: github.event.inputs.action == 'scan'

      - name: Analyze TODO Trends
        run: |
          echo "📊 TODO Analysis Results:" >> $GITHUB_STEP_SUMMARY
          echo "=========================" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count TODOs by type
          echo "### TODO Comments Found:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          grep -r -i "todo" --include="*.py" . | wc -l | xargs echo "TODO comments:" >> $GITHUB_STEP_SUMMARY
          grep -r -i "fixme" --include="*.py" . | wc -l | xargs echo "FIXME comments:" >> $GITHUB_STEP_SUMMARY
          grep -r -i "hack" --include="*.py" . | wc -l | xargs echo "HACK comments:" >> $GITHUB_STEP_SUMMARY
          grep -r -i "xxx" --include="*.py" . | wc -l | xargs echo "XXX comments:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Show critical TODOs if any exist
          if [ -f critical-todos.txt ] && [ -s critical-todos.txt ]; then
            echo "### 🚨 Critical Priority TODOs:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            head -20 critical-todos.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for TODO Violations
        run: |
          # Fail if there are too many critical TODOs
          CRITICAL_COUNT=$(grep -r -i "todo.*critical\|critical.*todo" --include="*.py" . | wc -l || echo "0")
          echo "Critical TODOs found: $CRITICAL_COUNT"
          
          if [ "$CRITICAL_COUNT" -gt 5 ]; then
            echo "❌ Too many critical TODOs found ($CRITICAL_COUNT > 5)"
            echo "Please address critical TODOs before merging"
            exit 1
          fi
          
          # Warn if there are many high priority TODOs
          HIGH_COUNT=$(grep -r -i "todo.*high\|high.*todo" --include="*.py" . | wc -l || echo "0")
          echo "High priority TODOs found: $HIGH_COUNT"
          
          if [ "$HIGH_COUNT" -gt 20 ]; then
            echo "⚠️ Many high priority TODOs found ($HIGH_COUNT > 20)"
            echo "Consider addressing some high priority TODOs"
          fi

      - name: Upload TODO Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: todo-report-${{ github.sha }}
          path: |
            todo-report.json
            critical-todos.txt
            high-priority-todos.txt
            TODO_TRACKING.json
        if: always()

      - name: Comment on PR with TODO Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read TODO report if it exists
            let todoSummary = "## 📋 TODO Analysis Summary\n\n";
            
            try {
              // Count different types of TODOs
              const { execSync } = require('child_process');
              
              const todoCount = execSync("grep -r -i 'todo' --include='*.py' . | wc -l", { encoding: 'utf8' }).trim();
              const fixmeCount = execSync("grep -r -i 'fixme' --include='*.py' . | wc -l", { encoding: 'utf8' }).trim();
              const hackCount = execSync("grep -r -i 'hack' --include='*.py' . | wc -l", { encoding: 'utf8' }).trim();
              
              todoSummary += `- 📝 TODO comments: ${todoCount}\n`;
              todoSummary += `- 🔧 FIXME comments: ${fixmeCount}\n`;
              todoSummary += `- ⚠️ HACK comments: ${hackCount}\n\n`;
              
              // Check for critical TODOs
              const criticalTodos = execSync("grep -r -i 'todo.*critical\\|critical.*todo' --include='*.py' . | head -5", { encoding: 'utf8' }).trim();
              
              if (criticalTodos) {
                todoSummary += "### 🚨 Critical TODOs Found:\n```\n";
                todoSummary += criticalTodos;
                todoSummary += "\n```\n\n";
                todoSummary += "⚠️ Please address critical TODOs before merging.\n";
              } else {
                todoSummary += "✅ No critical TODOs found.\n";
              }
              
            } catch (error) {
              todoSummary += `Error analyzing TODOs: ${error.message}\n`;
            }
            
            todoSummary += "\n---\n";
            todoSummary += "📊 Full TODO report available in workflow artifacts.\n";
            todoSummary += "🔄 TODO tracking automatically synced with codebase.\n";
            
            // Post comment
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: todoSummary
            });

      - name: 'Notify Vercel - TODO Tracking Status'
        uses: 'vercel/repository-dispatch/actions/status@v1'
        with:
          name: 'Vercel - dev-skyy: todo-tracking'
        if: always()

  todo-dashboard-deploy:
    name: Deploy TODO Dashboard
    runs-on: ubuntu-latest
    needs: todo-tracking
    if: github.ref == 'refs/heads/main' && (github.event.inputs.action == 'dashboard' || github.event_name == 'schedule')
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'

      - name: Install Dashboard Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn jinja2 python-multipart

      - name: Test TODO Dashboard
        run: |
          cd tools
          python -c "
          from todo_dashboard import TodoDashboard
          dashboard = TodoDashboard()
          print('✅ TODO Dashboard initialized successfully')
          stats = dashboard.get_dashboard_stats()
          print(f'📊 Dashboard stats: {stats}')
          "

      - name: Generate Dashboard Report
        run: |
          cd tools
          python todo_tracker.py report --output dashboard-report.json
          echo "📊 TODO Dashboard Report Generated" >> $GITHUB_STEP_SUMMARY
          echo "=================================" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Dashboard available at: http://localhost:8001" >> $GITHUB_STEP_SUMMARY
          echo "Report generated: $(date)" >> $GITHUB_STEP_SUMMARY

      - name: Upload Dashboard Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: todo-dashboard-${{ github.sha }}
          path: |
            tools/todo_dashboard.py
            tools/todo_tracker.py
            tools/dashboard-report.json
