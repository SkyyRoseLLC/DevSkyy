name: Auto-format Python Code

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main, develop ]

jobs:
  format:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install black==25.1.0 isort==5.13.2

      - name: Check if formatting is needed
        id: check-format
        run: |
          echo "Running formatting checks..."
          
          # Check Black formatting
          if ! black --check --diff . > black_check.log 2>&1; then
            echo "black_needed=true" >> $GITHUB_OUTPUT
            echo "Black formatting needed"
          else
            echo "black_needed=false" >> $GITHUB_OUTPUT
            echo "Black formatting is clean"
          fi
          
          # Check isort formatting  
          if ! isort --check-only --diff . > isort_check.log 2>&1; then
            echo "isort_needed=true" >> $GITHUB_OUTPUT
            echo "isort formatting needed"
          else
            echo "isort_needed=false" >> $GITHUB_OUTPUT
            echo "isort formatting is clean"
          fi
          
          # Output logs for debugging
          echo "=== Black Check Results ==="
          cat black_check.log || true
          echo "=== isort Check Results ==="
          cat isort_check.log || true

      - name: Apply Black formatting
        if: steps.check-format.outputs.black_needed == 'true'
        run: |
          echo "Applying Black formatting..."
          black --line-length=120 .
          echo "âœ… Black formatting applied"

      - name: Apply isort formatting
        if: steps.check-format.outputs.isort_needed == 'true'
        run: |
          echo "Applying isort formatting..."
          isort --profile=black --line-length=120 .
          echo "âœ… isort formatting applied"

      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No formatting changes needed"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Formatting changes applied"
            git diff --name-only
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "ðŸŽ¨ Auto-format Python code with Black and isort

          - Applied Black formatting with line-length=120
          - Applied isort import sorting with Black profile
          - Ensures consistent code style across the repository
          
          Auto-generated by GitHub Actions formatting workflow"
          git push

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.verify-changed-files.outputs.changed == 'true'
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸŽ¨ **Auto-formatting Applied**\n\nI\'ve automatically formatted the Python code in this PR using Black and isort to ensure consistent code style.\n\n**Changes applied:**\n- âœ… Black formatting (line-length=120)\n- âœ… Import sorting with isort\n\nThe code now passes all formatting checks! ðŸš€'
            })

      - name: Final formatting verification
        run: |
          echo "Running final formatting verification..."
          black --check --diff .
          isort --check-only --diff .
          echo "âœ… All formatting checks passed!"