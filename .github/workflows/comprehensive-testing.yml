
permissions:
  contents: read
  actions: read
  security-events: write
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Run tests
        run: |
          pytest tests/ -v --cov=. --cov-report=xml --cov-fail-under=5

      - name: Upload coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: 'Notify Vercel - Test Status'
        uses: 'vercel/repository-dispatch/actions/status@30f760c6640485cd92f8c785ef361382555fb712' # v1
        with:
          name: 'Vercel - dev-skyy: tests'
        if: always()
  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install linting tools
        run: |
          pip install black flake8 isort mypy

      - name: Check formatting (Black)
        run: black --check .

      - name: Check imports (isort)
        run: isort --check-only .

      - name: Lint (Flake8)
        run: flake8 . --max-line-length=88 --extend-ignore=E203,W503,E501,F401,F841 --max-complexity=15

      - name: Type check (mypy)
        run: mypy . --ignore-missing-imports || true

      - name: 'Notify Vercel - Lint Status'
        uses: 'vercel/repository-dispatch/actions/status@30f760c6640485cd92f8c785ef361382555fb712' # v1
        with:
          name: 'Vercel - dev-skyy: lint'
        if: always()

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install security tools
        run: |
          pip install bandit safety pip-audit

      - name: Security scan (Bandit)
        run: bandit -r . -f json -o bandit-report.json || true

      - name: Dependency audit (pip-audit)
        run: pip-audit --desc --format json > pip-audit-report.json || true

      - name: Vulnerability scan (Safety)
        run: safety check --json > safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: security-reports
          path: |
            bandit-report.json
            pip-audit-report.json
            safety-report.json

      - name: 'Notify Vercel - Security Status'
        uses: 'vercel/repository-dispatch/actions/status@30f760c6640485cd92f8c785ef361382555fb712' # v1
        with:
          name: 'Vercel - dev-skyy: security'
        if: always()

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint, security]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: false
          tags: devskyy:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 'Notify Vercel - Build Status'
        uses: 'vercel/repository-dispatch/actions/status@30f760c6640485cd92f8c785ef361382555fb712' # v1
        with:
          name: 'Vercel - dev-skyy: build'
        if: always()

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Deploy notification
        run: echo "ðŸš€ Ready to deploy to production"

      - name: 'Notify Vercel - Deploy Status'
        uses: 'vercel/repository-dispatch/actions/status@30f760c6640485cd92f8c785ef361382555fb712' # v1
        with:
          name: 'Vercel - dev-skyy: deploy'
        if: always()

      # Add your deployment steps here
      # Example for Railway:
      # - name: Deploy to Railway
      #   run: |
      #     npm i -g @railway/cli
      #     railway up
      #   env:
      #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
